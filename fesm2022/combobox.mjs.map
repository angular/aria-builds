{"version":3,"file":"combobox.mjs","sources":["../../../../../k8-fastbuild-ST-199a4f3c4e20/bin/src/aria/combobox/combobox.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\nimport {\n  afterRenderEffect,\n  computed,\n  contentChild,\n  Directive,\n  ElementRef,\n  inject,\n  input,\n  model,\n  signal,\n  untracked,\n  WritableSignal,\n} from '@angular/core';\nimport {DeferredContent, DeferredContentAware} from '@angular/aria/deferred-content';\nimport {\n  ComboboxPattern,\n  ComboboxListboxControls,\n  ComboboxTreeControls,\n} from '@angular/aria/private';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {toSignal} from '@angular/core/rxjs-interop';\n\n@Directive({\n  selector: '[ngCombobox]',\n  exportAs: 'ngCombobox',\n  hostDirectives: [\n    {\n      directive: DeferredContentAware,\n      inputs: ['preserveContent'],\n    },\n  ],\n  host: {\n    '[attr.data-expanded]': 'expanded()',\n    '(input)': '_pattern.onInput($event)',\n    '(keydown)': '_pattern.onKeydown($event)',\n    '(pointerup)': '_pattern.onPointerup($event)',\n    '(focusin)': '_pattern.onFocusIn()',\n    '(focusout)': '_pattern.onFocusOut($event)',\n  },\n})\nexport class Combobox<V> {\n  /** The directionality (LTR / RTL) context for the application (or a subtree of it). */\n  private readonly _directionality = inject(Directionality);\n\n  /** A signal wrapper for directionality. */\n  protected textDirection = toSignal(this._directionality.change, {\n    initialValue: this._directionality.value,\n  });\n\n  /** The element that the combobox is attached to. */\n  private readonly _elementRef = inject(ElementRef);\n\n  /** The DeferredContentAware host directive. */\n  private readonly _deferredContentAware = inject(DeferredContentAware, {optional: true});\n\n  /** The combobox popup. */\n  readonly popup = contentChild<ComboboxPopup<V>>(ComboboxPopup);\n\n  /** The filter mode for the combobox. */\n  filterMode = input<'manual' | 'auto-select' | 'highlight'>('manual');\n\n  /** Whether the combobox is focused. */\n  readonly isFocused = signal(false);\n\n  /** Whether the listbox has received focus yet. */\n  private _hasBeenFocused = signal(false);\n\n  /** Whether the combobox is disabled. */\n  readonly disabled = input(false);\n\n  /** Whether the combobox is read-only. */\n  readonly readonly = input(false);\n\n  /** The value of the first matching item in the popup. */\n  readonly firstMatch = input<V | undefined>(undefined);\n\n  /** Whether the combobox is expanded. */\n  readonly expanded = computed(() => this._pattern.expanded());\n\n  /** Input element connected to the combobox, if any. */\n  readonly inputElement = computed(() => this._pattern.inputs.inputEl());\n\n  /** The combobox ui pattern. */\n  readonly _pattern = new ComboboxPattern<any, V>({\n    ...this,\n    textDirection: this.textDirection,\n    disabled: this.disabled,\n    readonly: this.readonly,\n    inputValue: signal(''),\n    inputEl: signal(undefined),\n    containerEl: () => this._elementRef.nativeElement,\n    popupControls: () => this.popup()?.controls(),\n  });\n\n  constructor() {\n    afterRenderEffect(() => {\n      if (!this._deferredContentAware?.contentVisible() && this._pattern.isFocused()) {\n        this._deferredContentAware?.contentVisible.set(true);\n      }\n    });\n\n    afterRenderEffect(() => {\n      if (!this._hasBeenFocused() && this._pattern.isFocused()) {\n        this._hasBeenFocused.set(true);\n      }\n    });\n  }\n}\n\n@Directive({\n  selector: 'input[ngComboboxInput]',\n  exportAs: 'ngComboboxInput',\n  host: {\n    'role': 'combobox',\n    '[value]': 'value()',\n    '[attr.aria-expanded]': 'combobox._pattern.expanded()',\n    '[attr.aria-activedescendant]': 'combobox._pattern.activedescendant()',\n    '[attr.aria-controls]': 'combobox._pattern.popupId()',\n    '[attr.aria-haspopup]': 'combobox._pattern.hasPopup()',\n    '[attr.aria-autocomplete]': 'combobox._pattern.autocomplete()',\n    '[attr.readonly]': 'combobox._pattern.readonly()',\n  },\n})\nexport class ComboboxInput {\n  /** The element that the combobox is attached to. */\n  private readonly _elementRef = inject<ElementRef<HTMLInputElement>>(ElementRef);\n\n  /** The combobox that the input belongs to. */\n  readonly combobox = inject(Combobox);\n\n  /** The value of the input. */\n  value = model<string>('');\n\n  constructor() {\n    (this.combobox._pattern.inputs.inputEl as WritableSignal<HTMLInputElement>).set(\n      this._elementRef.nativeElement,\n    );\n    this.combobox._pattern.inputs.inputValue = this.value;\n\n    /** Focuses & selects the first item in the combobox if the user changes the input value. */\n    afterRenderEffect(() => {\n      this.value();\n      this.combobox.popup()?.controls()?.items();\n      untracked(() => this.combobox._pattern.onFilter());\n    });\n  }\n}\n\n@Directive({\n  selector: 'ng-template[ngComboboxPopupContainer]',\n  exportAs: 'ngComboboxPopupContainer',\n  hostDirectives: [DeferredContent],\n})\nexport class ComboboxPopupContainer {}\n\n@Directive({\n  selector: '[ngComboboxPopup]',\n  exportAs: 'ngComboboxPopup',\n})\nexport class ComboboxPopup<V> {\n  /** The combobox that the popup belongs to. */\n  readonly combobox = inject<Combobox<V>>(Combobox, {optional: true});\n\n  /** The controls the popup exposes to the combobox. */\n  readonly controls = signal<\n    ComboboxListboxControls<any, V> | ComboboxTreeControls<any, V> | undefined\n  >(undefined);\n}\n"],"names":["Combobox","inject","toSignal","_directionality","change","_elementRef","ElementRef","_deferredContentAware","DeferredContentAware","optional","contentChild","ComboboxPopup","ngDevMode","debugName","filterMode","input","isFocused","signal","disabled","readonly","firstMatch","undefined","expanded","computed","_pattern","inputElement","inputs","inputEl","ComboboxPattern","inputValue","containerEl","nativeElement","popupControls","popup","controls","contentVisible","set","ɵfac","i0","ɵɵngDeclareFactory","minVersion","version","ngImport","type","deps","target","ɵɵFactoryTarget","Directive","ɵdir","ɵɵngDeclareDirective","isStandalone","selector","classPropertyName","publicName","isSignal","isRequired","transformFunction","host","listeners","properties","queries","propertyName","first","predicate","descendants","exportAs","hostDirectives","directive","i1","decorators","args","combobox","value","afterRenderEffect","ComboboxPopupContainer","DeferredContent"],"mappings":"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"}