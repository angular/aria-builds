{"version":3,"file":"listbox.mjs","sources":["../../../../../k8-fastbuild-ST-199a4f3c4e20/bin/src/aria/listbox/listbox.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\nimport {\n  afterRenderEffect,\n  booleanAttribute,\n  computed,\n  contentChildren,\n  Directive,\n  ElementRef,\n  inject,\n  input,\n  model,\n  signal,\n  untracked,\n} from '@angular/core';\nimport {ComboboxListboxPattern, ListboxPattern, OptionPattern} from '@angular/aria/private';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {toSignal} from '@angular/core/rxjs-interop';\nimport {_IdGenerator} from '@angular/cdk/a11y';\nimport {ComboboxPopup} from '../combobox';\n\n/**\n * A listbox container.\n *\n * Listboxes are used to display a list of items for a user to select from. The Listbox is meant\n * to be used in conjunction with Option as follows:\n *\n * ```html\n * <ul ngListbox>\n *   <li [value]=\"1\" ngOption>Item 1</li>\n *   <li [value]=\"2\" ngOption>Item 2</li>\n *   <li [value]=\"3\" ngOption>Item 3</li>\n * </ul>\n * ```\n */\n@Directive({\n  selector: '[ngListbox]',\n  exportAs: 'ngListbox',\n  host: {\n    'role': 'listbox',\n    'class': 'ng-listbox',\n    '[attr.id]': 'id()',\n    '[attr.tabindex]': '_pattern.tabindex()',\n    '[attr.aria-readonly]': '_pattern.readonly()',\n    '[attr.aria-disabled]': '_pattern.disabled()',\n    '[attr.aria-orientation]': '_pattern.orientation()',\n    '[attr.aria-multiselectable]': '_pattern.multi()',\n    '[attr.aria-activedescendant]': '_pattern.activedescendant()',\n    '(keydown)': '_pattern.onKeydown($event)',\n    '(pointerdown)': '_pattern.onPointerdown($event)',\n    '(focusin)': 'onFocus()',\n  },\n  hostDirectives: [{directive: ComboboxPopup}],\n})\nexport class Listbox<V> {\n  /** A unique identifier for the listbox. */\n  private readonly _generatedId = inject(_IdGenerator).getId('ng-listbox-', true);\n\n  // TODO(wagnermaciel): https://github.com/angular/components/pull/30495#discussion_r1972601144.\n  /** A unique identifier for the listbox. */\n  protected id = computed(() => this._generatedId);\n\n  /** A reference to the parent combobox popup, if one exists. */\n  private readonly _popup = inject<ComboboxPopup<V>>(ComboboxPopup, {\n    optional: true,\n  });\n\n  /** A reference to the listbox element. */\n  private readonly _elementRef = inject(ElementRef);\n\n  /** The directionality (LTR / RTL) context for the application (or a subtree of it). */\n  private readonly _directionality = inject(Directionality);\n\n  /** The Options nested inside of the Listbox. */\n  private readonly _options = contentChildren(Option, {descendants: true});\n\n  /** A signal wrapper for directionality. */\n  protected textDirection = toSignal(this._directionality.change, {\n    initialValue: this._directionality.value,\n  });\n\n  /** The Option UIPatterns of the child Options. */\n  protected items = computed(() => this._options().map(option => option._pattern));\n\n  /** Whether the list is vertically or horizontally oriented. */\n  orientation = input<'vertical' | 'horizontal'>('vertical');\n\n  /** Whether multiple items in the list can be selected at once. */\n  multi = input(false, {transform: booleanAttribute});\n\n  /** Whether focus should wrap when navigating. */\n  wrap = input(true, {transform: booleanAttribute});\n\n  /** Whether disabled items in the list should be skipped when navigating. */\n  skipDisabled = input(true, {transform: booleanAttribute});\n\n  /** The focus strategy used by the list. */\n  focusMode = input<'roving' | 'activedescendant'>('roving');\n\n  /** The selection strategy used by the list. */\n  selectionMode = input<'follow' | 'explicit'>('follow');\n\n  /** The amount of time before the typeahead search is reset. */\n  typeaheadDelay = input<number>(0.5); // Picked arbitrarily.\n\n  /** Whether the listbox is disabled. */\n  disabled = input(false, {transform: booleanAttribute});\n\n  /** Whether the listbox is readonly. */\n  readonly = input(false, {transform: booleanAttribute});\n\n  /** The values of the current selected items. */\n  value = model<V[]>([]);\n\n  /** The Listbox UIPattern. */\n  readonly _pattern: ListboxPattern<V>;\n\n  /** Whether the listbox has received focus yet. */\n  private _hasFocused = signal(false);\n\n  constructor() {\n    const inputs = {\n      ...this,\n      id: this.id,\n      items: this.items,\n      activeItem: signal(undefined),\n      textDirection: this.textDirection,\n      element: () => this._elementRef.nativeElement,\n      combobox: () => this._popup?.combobox?._pattern,\n    };\n\n    this._pattern = this._popup?.combobox\n      ? new ComboboxListboxPattern<V>(inputs)\n      : new ListboxPattern<V>(inputs);\n\n    if (this._popup) {\n      this._popup.controls.set(this._pattern as ComboboxListboxPattern<V>);\n    }\n\n    afterRenderEffect(() => {\n      if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        const violations = this._pattern.validate();\n        for (const violation of violations) {\n          console.error(violation);\n        }\n      }\n    });\n\n    afterRenderEffect(() => {\n      if (!this._hasFocused()) {\n        this._pattern.setDefaultState();\n      }\n    });\n\n    // Ensure that if the active item is removed from\n    // the list, the listbox updates it's focus state.\n    afterRenderEffect(() => {\n      const items = inputs.items();\n      const activeItem = untracked(() => inputs.activeItem());\n\n      if (!items.some(i => i === activeItem) && activeItem) {\n        this._pattern.listBehavior.unfocus();\n      }\n    });\n\n    // Ensure that the value is always in sync with the available options.\n    afterRenderEffect(() => {\n      const items = inputs.items();\n      const value = untracked(() => this.value());\n\n      if (items && value.some(v => !items.some(i => i.value() === v))) {\n        this.value.set(value.filter(v => items.some(i => i.value() === v)));\n      }\n    });\n  }\n\n  onFocus() {\n    this._hasFocused.set(true);\n  }\n\n  scrollActiveItemIntoView(options: ScrollIntoViewOptions = {block: 'nearest'}) {\n    this._pattern.inputs.activeItem()?.element().scrollIntoView(options);\n  }\n}\n\n/** A selectable option in a Listbox. */\n@Directive({\n  selector: '[ngOption]',\n  exportAs: 'ngOption',\n  host: {\n    'role': 'option',\n    'class': 'ng-option',\n    '[attr.data-active]': '_pattern.active()',\n    '[attr.id]': '_pattern.id()',\n    '[attr.tabindex]': '_pattern.tabindex()',\n    '[attr.aria-selected]': '_pattern.selected()',\n    '[attr.aria-disabled]': '_pattern.disabled()',\n  },\n})\nexport class Option<V> {\n  /** A reference to the option element. */\n  private readonly _elementRef = inject(ElementRef);\n\n  /** The parent Listbox. */\n  private readonly _listbox = inject(Listbox);\n\n  /** A unique identifier for the option. */\n  private readonly _generatedId = inject(_IdGenerator).getId('ng-option-', true);\n\n  // TODO(wagnermaciel): https://github.com/angular/components/pull/30495#discussion_r1972601144.\n  /** A unique identifier for the option. */\n  protected id = computed(() => this._generatedId);\n\n  // TODO(wagnermaciel): See if we want to change how we handle this since textContent is not\n  // reactive. See https://github.com/angular/components/pull/30495#discussion_r1961260216.\n  /** The text used by the typeahead search. */\n  protected searchTerm = computed(() => this.label() ?? this.element().textContent);\n\n  /** The parent Listbox UIPattern. */\n  protected listbox = computed(() => this._listbox._pattern);\n\n  /** A reference to the option element to be focused on navigation. */\n  protected element = computed(() => this._elementRef.nativeElement);\n\n  /** The value of the option. */\n  value = input.required<V>();\n\n  /** Whether an item is disabled. */\n  disabled = input(false, {transform: booleanAttribute});\n\n  /** The text used by the typeahead search. */\n  label = input<string>();\n\n  /** Whether the option is selected. */\n  readonly selected = computed(() => this._pattern.selected());\n\n  /** The Option UIPattern. */\n  readonly _pattern = new OptionPattern<V>({\n    ...this,\n    id: this.id,\n    value: this.value,\n    listbox: this.listbox,\n    element: this.element,\n    searchTerm: this.searchTerm,\n  });\n}\n"],"names":["i1.ComboboxPopup"],"mappings":"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"}