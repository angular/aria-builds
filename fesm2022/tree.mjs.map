{"version":3,"file":"tree.mjs","sources":["../../../../../k8-fastbuild-ST-199a4f3c4e20/bin/src/aria/tree/tree.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\nimport {\n  Directive,\n  ElementRef,\n  afterRenderEffect,\n  booleanAttribute,\n  computed,\n  inject,\n  input,\n  model,\n  signal,\n  Signal,\n  OnInit,\n  OnDestroy,\n  untracked,\n} from '@angular/core';\nimport {_IdGenerator} from '@angular/cdk/a11y';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {DeferredContent, DeferredContentAware} from '@angular/aria/deferred-content';\nimport {ComboboxTreePattern, TreeItemPattern, TreePattern} from '@angular/aria/private';\nimport {ComboboxPopup} from '../combobox';\n\ninterface HasElement {\n  element: Signal<HTMLElement>;\n}\n\n/**\n * Sort directives by their document order.\n */\nfunction sortDirectives(a: HasElement, b: HasElement) {\n  return (a.element().compareDocumentPosition(b.element()) & Node.DOCUMENT_POSITION_PRECEDING) > 0\n    ? 1\n    : -1;\n}\n\n/**\n * A Tree container.\n *\n * Transforms nested lists into an accessible, ARIA-compliant tree structure.\n *\n * ```html\n * <ul ngTree [(value)]=\"selectedItems\" [multi]=\"true\">\n *   <li ngTreeItem [value]=\"'leaf1'\">Leaf Item 1</li>\n *   <li ngTreeItem [value]=\"'parent1'\">\n *     Parent Item 1\n *     <ul ngTreeItemGroup [value]=\"'parent1'\">\n *       <ng-template ngTreeItemGroupContent>\n *         <li ngTreeItem [value]=\"'child1.1'\">Child Item 1.1</li>\n *         <li ngTreeItem [value]=\"'child1.2'\">Child Item 1.2</li>\n *       </ng-template>\n *     </ul>\n *   </li>\n *   <li ngTreeItem [value]=\"'leaf2'\" [disabled]=\"true\">Disabled Leaf Item 2</li>\n * </ul>\n * ```\n */\n@Directive({\n  selector: '[ngTree]',\n  exportAs: 'ngTree',\n  host: {\n    'class': 'ng-tree',\n    'role': 'tree',\n    '[attr.id]': 'id()',\n    '[attr.aria-orientation]': '_pattern.orientation()',\n    '[attr.aria-multiselectable]': '_pattern.multi()',\n    '[attr.aria-disabled]': '_pattern.disabled()',\n    '[attr.aria-activedescendant]': '_pattern.activedescendant()',\n    '[tabindex]': '_pattern.tabindex()',\n    '(keydown)': '_pattern.onKeydown($event)',\n    '(pointerdown)': '_pattern.onPointerdown($event)',\n    '(focusin)': 'onFocus()',\n  },\n  hostDirectives: [{directive: ComboboxPopup}],\n})\nexport class Tree<V> {\n  /** A unique identifier for the tree. */\n  private readonly _generatedId = inject(_IdGenerator).getId('ng-tree-');\n\n  // TODO(wagnermaciel): https://github.com/angular/components/pull/30495#discussion_r1972601144.\n  /** A unique identifier for the tree. */\n  protected id = computed(() => this._generatedId);\n\n  /** A reference to the parent combobox popup, if one exists. */\n  private readonly _popup = inject<ComboboxPopup<V>>(ComboboxPopup, {\n    optional: true,\n  });\n\n  /** A reference to the tree element. */\n  private readonly _elementRef = inject(ElementRef);\n\n  /** All TreeItem instances within this tree. */\n  private readonly _unorderedItems = signal(new Set<TreeItem<V>>());\n\n  /** Orientation of the tree. */\n  readonly orientation = input<'vertical' | 'horizontal'>('vertical');\n\n  /** Whether multi-selection is allowed. */\n  readonly multi = input(false, {transform: booleanAttribute});\n\n  /** Whether the tree is disabled. */\n  readonly disabled = input(false, {transform: booleanAttribute});\n\n  /** The selection strategy used by the tree. */\n  readonly selectionMode = input<'explicit' | 'follow'>('explicit');\n\n  /** The focus strategy used by the tree. */\n  readonly focusMode = input<'roving' | 'activedescendant'>('roving');\n\n  /** Whether navigation wraps. */\n  readonly wrap = input(true, {transform: booleanAttribute});\n\n  /** Whether to skip disabled items during navigation. */\n  readonly skipDisabled = input(true, {transform: booleanAttribute});\n\n  /** Typeahead delay. */\n  readonly typeaheadDelay = input(0.5);\n\n  /** Selected item values. */\n  readonly value = model<V[]>([]);\n\n  /** Text direction. */\n  readonly textDirection = inject(Directionality).valueSignal;\n\n  /** Whether the tree is in navigation mode. */\n  readonly nav = input(false);\n\n  /** The aria-current type. */\n  readonly currentType = input<'page' | 'step' | 'location' | 'date' | 'time' | 'true' | 'false'>(\n    'page',\n  );\n\n  /** The UI pattern for the tree. */\n  readonly _pattern: TreePattern<V>;\n\n  /** Whether the tree has received focus yet. */\n  private _hasFocused = signal(false);\n\n  constructor() {\n    const inputs = {\n      ...this,\n      id: this.id,\n      allItems: computed(() =>\n        [...this._unorderedItems()].sort(sortDirectives).map(item => item._pattern),\n      ),\n      activeItem: signal<TreeItemPattern<V> | undefined>(undefined),\n      element: () => this._elementRef.nativeElement,\n      combobox: () => this._popup?.combobox?._pattern,\n    };\n\n    this._pattern = this._popup?.combobox\n      ? new ComboboxTreePattern<V>(inputs)\n      : new TreePattern<V>(inputs);\n\n    if (this._popup?.combobox) {\n      this._popup?.controls?.set(this._pattern as ComboboxTreePattern<V>);\n    }\n\n    afterRenderEffect(() => {\n      if (!this._hasFocused()) {\n        this._pattern.setDefaultState();\n      }\n    });\n\n    afterRenderEffect(() => {\n      const items = inputs.allItems();\n      const activeItem = untracked(() => inputs.activeItem());\n\n      if (!items.some(i => i === activeItem) && activeItem) {\n        this._pattern.listBehavior.unfocus();\n      }\n    });\n\n    afterRenderEffect(() => {\n      const items = inputs.allItems();\n      const value = untracked(() => this.value());\n\n      if (items && value.some(v => !items.some(i => i.value() === v))) {\n        this.value.set(value.filter(v => items.some(i => i.value() === v)));\n      }\n    });\n  }\n\n  onFocus() {\n    this._hasFocused.set(true);\n  }\n\n  register(child: TreeItem<V>) {\n    this._unorderedItems().add(child);\n    this._unorderedItems.set(new Set(this._unorderedItems()));\n  }\n\n  unregister(child: TreeItem<V>) {\n    this._unorderedItems().delete(child);\n    this._unorderedItems.set(new Set(this._unorderedItems()));\n  }\n\n  scrollActiveItemIntoView(options: ScrollIntoViewOptions = {block: 'nearest'}) {\n    this._pattern.inputs.activeItem()?.element().scrollIntoView(options);\n  }\n}\n\n/**\n * A selectable and expandable Tree Item in a Tree.\n */\n@Directive({\n  selector: '[ngTreeItem]',\n  exportAs: 'ngTreeItem',\n  host: {\n    'class': 'ng-treeitem',\n    '[attr.data-active]': '_pattern.active()',\n    'role': 'treeitem',\n    '[id]': '_pattern.id()',\n    '[attr.aria-expanded]': '_pattern.expandable() ? _pattern.expanded() : null',\n    '[attr.aria-selected]': '_pattern.selected()',\n    '[attr.aria-current]': '_pattern.current()',\n    '[attr.aria-disabled]': '_pattern.disabled()',\n    '[attr.aria-level]': '_pattern.level()',\n    '[attr.aria-setsize]': '_pattern.setsize()',\n    '[attr.aria-posinset]': '_pattern.posinset()',\n    '[attr.tabindex]': '_pattern.tabindex()',\n  },\n})\nexport class TreeItem<V> extends DeferredContentAware implements OnInit, OnDestroy, HasElement {\n  /** A reference to the tree item element. */\n  private readonly _elementRef = inject(ElementRef);\n\n  /** A unique identifier for the tree item. */\n  private readonly _id = inject(_IdGenerator).getId('ng-tree-item-');\n\n  /** The owned tree item group. */\n  private readonly _group = signal<TreeItemGroup<V> | undefined>(undefined);\n\n  /** The host native element. */\n  readonly element = computed(() => this._elementRef.nativeElement);\n\n  /** The value of the tree item. */\n  readonly value = input.required<V>();\n\n  /** The parent tree root or tree item group. */\n  readonly parent = input.required<Tree<V> | TreeItemGroup<V>>();\n\n  /** Whether the tree item is disabled. */\n  readonly disabled = input(false, {transform: booleanAttribute});\n\n  /** Whether the tree item is selectable. */\n  readonly selectable = input<boolean>(true);\n\n  /** Optional label for typeahead. Defaults to the element's textContent. */\n  readonly label = input<string>();\n\n  /** Search term for typeahead. */\n  readonly searchTerm = computed(() => this.label() ?? this.element().textContent);\n\n  /** The tree root. */\n  readonly tree: Signal<Tree<V>> = computed(() => {\n    if (this.parent() instanceof Tree) {\n      return this.parent() as Tree<V>;\n    }\n    return (this.parent() as TreeItemGroup<V>).ownedBy().tree();\n  });\n\n  /** The UI pattern for this item. */\n  _pattern: TreeItemPattern<V>;\n\n  constructor() {\n    super();\n    this.preserveContent.set(true);\n    // Connect the group's hidden state to the DeferredContentAware's visibility.\n    afterRenderEffect(() => {\n      this.tree()._pattern instanceof ComboboxTreePattern\n        ? this.contentVisible.set(true)\n        : this.contentVisible.set(this._pattern.expanded());\n    });\n  }\n\n  ngOnInit() {\n    this.parent().register(this);\n    this.tree().register(this);\n\n    const treePattern = computed(() => this.tree()._pattern);\n    const parentPattern = computed(() => {\n      if (this.parent() instanceof Tree) {\n        return treePattern();\n      }\n      return (this.parent() as TreeItemGroup<V>).ownedBy()._pattern;\n    });\n    this._pattern = new TreeItemPattern<V>({\n      ...this,\n      id: () => this._id,\n      tree: treePattern,\n      parent: parentPattern,\n      children: computed(() => this._group()?.children() ?? []),\n      hasChildren: computed(() => !!this._group()),\n    });\n  }\n\n  ngOnDestroy() {\n    this.parent().unregister(this);\n    this.tree().unregister(this);\n  }\n\n  register(group: TreeItemGroup<V>) {\n    this._group.set(group);\n  }\n\n  unregister() {\n    this._group.set(undefined);\n  }\n}\n\n/**\n * Contains children tree itmes.\n */\n@Directive({\n  selector: 'ng-template[ngTreeItemGroup]',\n  exportAs: 'ngTreeItemGroup',\n  hostDirectives: [DeferredContent],\n})\nexport class TreeItemGroup<V> implements OnInit, OnDestroy {\n  /** The DeferredContent host directive. */\n  private readonly _deferredContent = inject(DeferredContent);\n\n  /** All groupable items that are descendants of the group. */\n  private readonly _unorderedItems = signal(new Set<TreeItem<V>>());\n\n  /** Child items within this group. */\n  readonly children = computed<TreeItemPattern<V>[]>(() =>\n    [...this._unorderedItems()].sort(sortDirectives).map(c => c._pattern),\n  );\n\n  /** Tree item that owns the group. */\n  readonly ownedBy = input.required<TreeItem<V>>();\n\n  ngOnInit() {\n    this._deferredContent.deferredContentAware.set(this.ownedBy());\n    this.ownedBy().register(this);\n  }\n\n  ngOnDestroy() {\n    this.ownedBy().unregister();\n  }\n\n  register(child: TreeItem<V>) {\n    this._unorderedItems().add(child);\n    this._unorderedItems.set(new Set(this._unorderedItems()));\n  }\n\n  unregister(child: TreeItem<V>) {\n    this._unorderedItems().delete(child);\n    this._unorderedItems.set(new Set(this._unorderedItems()));\n  }\n}\n"],"names":["i1.ComboboxPopup","i2"],"mappings":"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"}