{"version":3,"file":"accordion.mjs","sources":["../../../../../k8-fastbuild-ST-199a4f3c4e20/bin/src/aria/accordion/accordion.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\nimport {\n  Directive,\n  input,\n  ElementRef,\n  inject,\n  contentChildren,\n  afterRenderEffect,\n  signal,\n  model,\n  booleanAttribute,\n  computed,\n  WritableSignal,\n} from '@angular/core';\nimport {_IdGenerator} from '@angular/cdk/a11y';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {DeferredContent, DeferredContentAware} from '@angular/aria/deferred-content';\nimport {\n  AccordionGroupPattern,\n  AccordionPanelPattern,\n  AccordionTriggerPattern,\n} from '@angular/aria/private';\n\n/**\n * Represents the content panel of an accordion item. It is controlled by an\n * associated `AccordionTrigger`.\n */\n@Directive({\n  selector: '[ngAccordionPanel]',\n  exportAs: 'ngAccordionPanel',\n  hostDirectives: [\n    {\n      directive: DeferredContentAware,\n      inputs: ['preserveContent'],\n    },\n  ],\n  host: {\n    'class': 'ng-accordion-panel',\n    'role': 'region',\n    '[attr.id]': '_pattern.id()',\n    '[attr.aria-labelledby]': '_pattern.accordionTrigger()?.id()',\n    '[attr.inert]': '_pattern.hidden() ? true : null',\n  },\n})\nexport class AccordionPanel {\n  /** The DeferredContentAware host directive. */\n  private readonly _deferredContentAware = inject(DeferredContentAware);\n\n  /** A global unique identifier for the panel. */\n  private readonly _id = inject(_IdGenerator).getId('accordion-trigger-', true);\n\n  /** A local unique identifier for the panel, used to match with its trigger's value. */\n  value = input.required<string>();\n\n  /** The parent accordion trigger pattern that controls this panel. This is set by AccordionGroup. */\n  readonly accordionTrigger: WritableSignal<AccordionTriggerPattern | undefined> =\n    signal(undefined);\n\n  /** The UI pattern instance for this panel. */\n  readonly _pattern: AccordionPanelPattern = new AccordionPanelPattern({\n    id: () => this._id,\n    value: this.value,\n    accordionTrigger: () => this.accordionTrigger(),\n  });\n\n  constructor() {\n    // Connect the panel's hidden state to the DeferredContentAware's visibility.\n    afterRenderEffect(() => {\n      this._deferredContentAware.contentVisible.set(!this._pattern.hidden());\n    });\n  }\n}\n\n/**\n * Represents the trigger button for an accordion item. It controls the expansion\n * state of an associated `AccordionPanel`.\n */\n@Directive({\n  selector: '[ngAccordionTrigger]',\n  exportAs: 'ngAccordionTrigger',\n  host: {\n    'class': 'ng-accordion-trigger',\n    '[attr.data-active]': '_pattern.active()',\n    'role': 'button',\n    '[id]': '_pattern.id()',\n    '[attr.aria-expanded]': '_pattern.expanded()',\n    '[attr.aria-controls]': '_pattern.controls()',\n    '[attr.aria-disabled]': '_pattern.disabled()',\n    '[attr.disabled]': 'hardDisabled() ? true : null',\n    '[attr.tabindex]': '_pattern.tabindex()',\n    '(keydown)': '_pattern.onKeydown($event)',\n    '(pointerdown)': '_pattern.onPointerdown($event)',\n    '(focusin)': '_pattern.onFocus($event)',\n  },\n})\nexport class AccordionTrigger {\n  /** A global unique identifier for the trigger. */\n  private readonly _id = inject(_IdGenerator).getId('ng-accordion-trigger-', true);\n\n  /** A reference to the trigger element. */\n  private readonly _elementRef = inject(ElementRef);\n\n  /** The parent AccordionGroup. */\n  private readonly _accordionGroup = inject(AccordionGroup);\n\n  /** A local unique identifier for the trigger, used to match with its panel's value. */\n  value = input.required<string>();\n\n  /** Whether the trigger is disabled. */\n  disabled = input(false, {transform: booleanAttribute});\n\n  /**\n   * Whether this trigger is completely inaccessible.\n   *\n   * TODO(ok7sai): Consider move this to UI patterns.\n   */\n  readonly hardDisabled = computed(() => this._pattern.disabled() && this._pattern.tabindex() < 0);\n\n  /** The accordion panel pattern controlled by this trigger. This is set by AccordionGroup. */\n  readonly accordionPanel: WritableSignal<AccordionPanelPattern | undefined> = signal(undefined);\n\n  /** The UI pattern instance for this trigger. */\n  readonly _pattern: AccordionTriggerPattern = new AccordionTriggerPattern({\n    id: () => this._id,\n    value: this.value,\n    disabled: this.disabled,\n    element: () => this._elementRef.nativeElement,\n    accordionGroup: computed(() => this._accordionGroup._pattern),\n    accordionPanel: this.accordionPanel,\n  });\n}\n\n/**\n * Container for a group of accordion items. It manages the overall state and\n * interactions of the accordion, such as keyboard navigation and expansion mode.\n */\n@Directive({\n  selector: '[ngAccordionGroup]',\n  exportAs: 'ngAccordionGroup',\n  host: {\n    'class': 'ng-accordion-group',\n  },\n})\nexport class AccordionGroup {\n  /** A reference to the group element. */\n  private readonly _elementRef = inject(ElementRef);\n\n  /** The AccordionTriggers nested inside this group. */\n  protected readonly _triggers = contentChildren(AccordionTrigger, {descendants: true});\n\n  /** The AccordionPanels nested inside this group. */\n  protected readonly _panels = contentChildren(AccordionPanel, {descendants: true});\n\n  /** The text direction (ltr or rtl). */\n  readonly textDirection = inject(Directionality).valueSignal;\n\n  /** Whether the entire accordion group is disabled. */\n  disabled = input(false, {transform: booleanAttribute});\n\n  /** Whether multiple accordion items can be expanded simultaneously. */\n  multiExpandable = input(true, {transform: booleanAttribute});\n\n  /** The values of the current selected/expanded accordions. */\n  value = model<string[]>([]);\n\n  /** Whether disabled items should be skipped during keyboard navigation. */\n  skipDisabled = input(true, {transform: booleanAttribute});\n\n  /** Whether keyboard navigation should wrap around from the last item to the first, and vice-versa. */\n  wrap = input(false, {transform: booleanAttribute});\n\n  /** The UI pattern instance for this accordion group. */\n  readonly _pattern: AccordionGroupPattern = new AccordionGroupPattern({\n    ...this,\n    // TODO(ok7sai): Consider making `activeItem` an internal state in the pattern and call\n    // `setDefaultState` in the CDK.\n    activeItem: signal(undefined),\n    items: computed(() => this._triggers().map(trigger => trigger._pattern)),\n    expandedIds: this.value,\n    // TODO(ok7sai): Investigate whether an accordion should support horizontal mode.\n    orientation: () => 'vertical',\n    element: () => this._elementRef.nativeElement,\n  });\n\n  constructor() {\n    // Effect to link triggers with their corresponding panels and update the group's items.\n    afterRenderEffect(() => {\n      const triggers = this._triggers();\n      const panels = this._panels();\n\n      for (const trigger of triggers) {\n        const panel = panels.find(p => p.value() === trigger.value());\n        trigger.accordionPanel.set(panel?._pattern);\n        if (panel) {\n          panel.accordionTrigger.set(trigger._pattern);\n        }\n      }\n    });\n  }\n}\n\n/**\n * A structural directive that marks the `ng-template` to be used as the content\n * for a `AccordionPanel`. This content can be lazily loaded.\n */\n@Directive({\n  selector: 'ng-template[ngAccordionContent]',\n  hostDirectives: [DeferredContent],\n})\nexport class AccordionContent {}\n"],"names":[],"mappings":"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"}