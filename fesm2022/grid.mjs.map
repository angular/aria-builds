{"version":3,"file":"grid.mjs","sources":["../../../../../k8-fastbuild-ST-199a4f3c4e20/bin/src/aria/grid/grid.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\nimport {_IdGenerator} from '@angular/cdk/a11y';\nimport {\n  afterRenderEffect,\n  booleanAttribute,\n  computed,\n  contentChild,\n  contentChildren,\n  Directive,\n  ElementRef,\n  inject,\n  input,\n  model,\n  Signal,\n} from '@angular/core';\nimport {GridPattern, GridRowPattern, GridCellPattern, GridCellWidgetPattern} from '../private';\n\n/** A directive that provides grid-based navigation and selection behavior. */\n@Directive({\n  selector: '[ngGrid]',\n  exportAs: 'ngGrid',\n  host: {\n    'class': 'grid',\n    'role': 'grid',\n    '[tabindex]': '_pattern.tabIndex()',\n    '[attr.aria-disabled]': '_pattern.disabled()',\n    '[attr.aria-activedescendant]': '_pattern.activeDescendant()',\n    '(keydown)': '_pattern.onKeydown($event)',\n    '(pointerdown)': '_pattern.onPointerdown($event)',\n    '(pointermove)': '_pattern.onPointermove($event)',\n    '(pointerup)': '_pattern.onPointerup($event)',\n    '(focusin)': '_pattern.onFocusIn()',\n    '(focusout)': '_pattern.onFocusOut($event)',\n  },\n})\nexport class Grid {\n  /** A reference to the host element. */\n  private readonly _elementRef = inject(ElementRef);\n\n  /** The rows that make up the grid. */\n  private readonly _rows = contentChildren(GridRow);\n\n  /** The UI patterns for the rows in the grid. */\n  private readonly _rowPatterns: Signal<GridRowPattern[]> = computed(() =>\n    this._rows().map(r => r._pattern),\n  );\n\n  /** The host native element. */\n  readonly element = computed(() => this._elementRef.nativeElement);\n\n  /** Whether selection is enabled for the grid. */\n  readonly enableSelection = input(false, {transform: booleanAttribute});\n\n  /** Whether the grid is disabled. */\n  readonly disabled = input(false, {transform: booleanAttribute});\n\n  /** Whether to skip disabled items during navigation. */\n  readonly skipDisabled = input(true, {transform: booleanAttribute});\n\n  /** The focus strategy used by the grid. */\n  readonly focusMode = input<'roving' | 'activedescendant'>('roving');\n\n  /** The wrapping behavior for keyboard navigation along the row axis. */\n  readonly rowWrap = input<'continuous' | 'loop' | 'nowrap'>('loop');\n\n  /** The wrapping behavior for keyboard navigation along the column axis. */\n  readonly colWrap = input<'continuous' | 'loop' | 'nowrap'>('loop');\n\n  /** The UI pattern for the grid. */\n  readonly _pattern = new GridPattern({\n    ...this,\n    rows: this._rowPatterns,\n    getCell: e => this._getCell(e),\n  });\n\n  constructor() {\n    afterRenderEffect(() => this._pattern.resetStateEffect());\n    afterRenderEffect(() => this._pattern.focusEffect());\n  }\n\n  /** Gets the cell pattern for a given element. */\n  private _getCell(element: Element): GridCellPattern | undefined {\n    const cellElement = element.closest('[ngGridCell]');\n    if (cellElement === undefined) return;\n\n    const widgetElement = element.closest('[ngGridCellWidget]');\n    for (const row of this._rowPatterns()) {\n      for (const cell of row.inputs.cells()) {\n        if (\n          cell.element() === cellElement ||\n          (widgetElement !== undefined && cell.element() === widgetElement)\n        ) {\n          return cell;\n        }\n      }\n    }\n    return;\n  }\n}\n\n/** A directive that represents a row in a grid. */\n@Directive({\n  selector: '[ngGridRow]',\n  exportAs: 'ngGridRow',\n  host: {\n    'class': 'grid-row',\n    '[attr.role]': 'role()',\n  },\n})\nexport class GridRow {\n  /** A reference to the host element. */\n  private readonly _elementRef = inject(ElementRef);\n\n  /** The cells that make up this row. */\n  private readonly _cells = contentChildren(GridCell);\n\n  /** The UI patterns for the cells in this row. */\n  private readonly _cellPatterns: Signal<GridCellPattern[]> = computed(() =>\n    this._cells().map(c => c._pattern),\n  );\n\n  /** The parent grid. */\n  private readonly _grid = inject(Grid);\n\n  /** The parent grid UI pattern. */\n  readonly grid = computed(() => this._grid._pattern);\n\n  /** The host native element. */\n  readonly element = computed(() => this._elementRef.nativeElement);\n\n  /** The ARIA role for the row. */\n  readonly role = input<'row' | 'rowheader'>('row');\n\n  /** The index of this row within the grid. */\n  readonly rowIndex = input<number>();\n\n  /** The UI pattern for the grid row. */\n  readonly _pattern = new GridRowPattern({\n    ...this,\n    cells: this._cellPatterns,\n  });\n}\n\n/** A directive that represents a cell in a grid. */\n@Directive({\n  selector: '[ngGridCell]',\n  exportAs: 'ngGridCell',\n  host: {\n    'class': 'grid-cell',\n    '[attr.role]': 'role()',\n    '[attr.id]': '_pattern.id()',\n    '[attr.rowspan]': '_pattern.rowSpan()',\n    '[attr.colspan]': '_pattern.colSpan()',\n    '[attr.data-active]': '_pattern.active()',\n    '[attr.aria-disabled]': '_pattern.disabled()',\n    '[attr.aria-rowspan]': '_pattern.rowSpan()',\n    '[attr.aria-colspan]': '_pattern.colSpan()',\n    '[attr.aria-rowindex]': '_pattern.ariaRowIndex()',\n    '[attr.aria-colindex]': '_pattern.ariaColIndex()',\n    '[attr.aria-selected]': '_pattern.ariaSelected()',\n    '[tabindex]': '_pattern.tabIndex()',\n  },\n})\nexport class GridCell {\n  /** A reference to the host element. */\n  private readonly _elementRef = inject(ElementRef);\n\n  /** The widget contained within this cell, if any. */\n  private readonly _widgets = contentChild(GridCellWidget);\n\n  /** The UI pattern for the widget in this cell. */\n  private readonly _widgetPattern: Signal<GridCellWidgetPattern | undefined> = computed(\n    () => this._widgets()?._pattern,\n  );\n\n  /** The parent row. */\n  private readonly _row = inject(GridRow);\n\n  /** A unique identifier for the cell. */\n  private readonly _id = inject(_IdGenerator).getId('ng-grid-cell-');\n\n  /** The host native element. */\n  readonly element = computed(() => this._elementRef.nativeElement);\n\n  /** The ARIA role for the cell. */\n  readonly role = input<'gridcell' | 'columnheader'>('gridcell');\n\n  /** The number of rows the cell should span. */\n  readonly rowSpan = input<number>(1);\n\n  /** The number of columns the cell should span. */\n  readonly colSpan = input<number>(1);\n\n  /** The index of this cell's row within the grid. */\n  readonly rowIndex = input<number>();\n\n  /** The index of this cell's column within the grid. */\n  readonly colIndex = input<number>();\n\n  /** Whether the cell is disabled. */\n  readonly disabled = input(false, {transform: booleanAttribute});\n\n  /** Whether the cell is selected. */\n  readonly selected = model<boolean>(false);\n\n  /** Whether the cell is selectable. */\n  readonly selectable = input<boolean>(true);\n\n  /** The UI pattern for the grid cell. */\n  readonly _pattern = new GridCellPattern({\n    ...this,\n    id: () => this._id,\n    grid: this._row.grid,\n    row: () => this._row._pattern,\n    widget: this._widgetPattern,\n  });\n}\n\n/** A directive that represents a widget inside a grid cell. */\n@Directive({\n  selector: '[ngGridCellWidget]',\n  exportAs: 'ngGridCellWidget',\n  host: {\n    'class': 'grid-cell-widget',\n    '[attr.data-active]': '_pattern.active()',\n    '[tabindex]': '_pattern.tabIndex()',\n  },\n})\nexport class GridCellWidget {\n  /** A reference to the host element. */\n  private readonly _elementRef = inject(ElementRef);\n\n  /** The parent cell. */\n  private readonly _cell = inject(GridCell);\n\n  /** The host native element. */\n  readonly element = computed(() => this._elementRef.nativeElement);\n\n  /** Whether the widget is activated and the grid navigation should be paused. */\n  readonly activate = model<boolean>(false);\n\n  /** The UI pattern for the grid cell widget. */\n  readonly _pattern = new GridCellWidgetPattern({\n    ...this,\n    cell: () => this._cell._pattern,\n  });\n\n  /** Focuses the widget. */\n  focus(): void {\n    this.element().focus();\n  }\n}\n"],"names":[],"mappings":"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"}