{"version":3,"file":"menu.mjs","sources":["../../../../../k8-fastbuild-ST-199a4f3c4e20/bin/src/aria/menu/menu.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\nimport {\n  afterRenderEffect,\n  computed,\n  contentChildren,\n  Directive,\n  ElementRef,\n  inject,\n  input,\n  model,\n  output,\n  Signal,\n  signal,\n  untracked,\n} from '@angular/core';\nimport {\n  SignalLike,\n  MenuBarPattern,\n  MenuItemPattern,\n  MenuPattern,\n  MenuTriggerPattern,\n} from '@angular/aria/private';\nimport {_IdGenerator} from '@angular/cdk/a11y';\nimport {toSignal} from '@angular/core/rxjs-interop';\nimport {Directionality} from '@angular/cdk/bidi';\n\n/**\n * A trigger for a menu.\n *\n * The menu trigger is used to open and close menus, and can be placed on menu items to connect\n * sub-menus.\n */\n@Directive({\n  selector: 'button[ngMenuTrigger]',\n  exportAs: 'ngMenuTrigger',\n  host: {\n    'class': 'ng-menu-trigger',\n    '[attr.tabindex]': '_pattern.tabindex()',\n    '[attr.aria-haspopup]': '_pattern.hasPopup()',\n    '[attr.aria-expanded]': '_pattern.expanded()',\n    '[attr.aria-controls]': '_pattern.submenu()?.id()',\n    '(click)': '_pattern.onClick()',\n    '(keydown)': '_pattern.onKeydown($event)',\n    '(focusout)': '_pattern.onFocusOut($event)',\n  },\n})\nexport class MenuTrigger<V> {\n  /** A reference to the menu trigger element. */\n  private readonly _elementRef = inject(ElementRef);\n\n  /** A reference to the menu element. */\n  readonly element: HTMLButtonElement = this._elementRef.nativeElement;\n\n  // TODO(wagnermaciel): See we can remove the need to pass in a submenu.\n\n  /** The submenu associated with the menu trigger. */\n  submenu = input<Menu<V> | undefined>(undefined);\n\n  /** A callback function triggered when a menu item is selected. */\n  onSubmit = output<V>();\n\n  /** The menu trigger ui pattern instance. */\n  readonly _pattern: MenuTriggerPattern<V> = new MenuTriggerPattern({\n    onSubmit: (value: V) => this.onSubmit.emit(value),\n    element: computed(() => this._elementRef.nativeElement),\n    submenu: computed(() => this.submenu()?._pattern),\n  });\n}\n\n/**\n * A list of menu items.\n *\n * A menu is used to offer a list of menu item choices to users. Menus can be nested within other\n * menus to create sub-menus.\n *\n * ```html\n * <button ngMenuTrigger menu=\"menu\">Options</button>\n *\n * <div ngMenu #menu=\"ngMenu\">\n *   <div ngMenuItem>Star</div>\n *   <div ngMenuItem>Edit</div>\n *   <div ngMenuItem>Delete</div>\n * </div>\n * ```\n */\n@Directive({\n  selector: '[ngMenu]',\n  exportAs: 'ngMenu',\n  host: {\n    'role': 'menu',\n    'class': 'ng-menu',\n    '[attr.id]': '_pattern.id()',\n    '[attr.data-visible]': '_pattern.isVisible()',\n    '(keydown)': '_pattern.onKeydown($event)',\n    '(mouseover)': '_pattern.onMouseOver($event)',\n    '(mouseout)': '_pattern.onMouseOut($event)',\n    '(focusout)': '_pattern.onFocusOut($event)',\n    '(focusin)': '_pattern.onFocusIn()',\n    '(click)': '_pattern.onClick($event)',\n  },\n})\nexport class Menu<V> {\n  /** The menu items contained in the menu. */\n  readonly _allItems = contentChildren<MenuItem<V>>(MenuItem, {descendants: true});\n\n  /** The menu items that are direct children of this menu. */\n  readonly _items: Signal<MenuItem<V>[]> = computed(() =>\n    this._allItems().filter(i => i.parent === this),\n  );\n\n  /** A reference to the menu element. */\n  private readonly _elementRef = inject(ElementRef);\n\n  /** A reference to the menu element. */\n  readonly element: HTMLElement = this._elementRef.nativeElement;\n\n  /** The directionality (LTR / RTL) context for the application (or a subtree of it). */\n  private readonly _directionality = inject(Directionality);\n\n  /** A signal wrapper for directionality. */\n  readonly textDirection = toSignal(this._directionality.change, {\n    initialValue: this._directionality.value,\n  });\n\n  /** The submenu associated with the menu. */\n  readonly submenu = input<Menu<V> | undefined>(undefined);\n\n  /** The unique ID of the menu. */\n  readonly id = input<string>(inject(_IdGenerator).getId('ng-menu-', true));\n\n  /** Whether the menu should wrap its items. */\n  readonly wrap = input<boolean>(true);\n\n  /** The delay in seconds before the typeahead buffer is cleared. */\n  readonly typeaheadDelay = input<number>(0.5); // Picked arbitrarily.\n\n  /** A reference to the parent menu item or menu trigger. */\n  readonly parent = input<MenuTrigger<V> | MenuItem<V>>();\n\n  /** The menu ui pattern instance. */\n  readonly _pattern: MenuPattern<V>;\n\n  /**\n   * The menu items as a writable signal.\n   *\n   * TODO(wagnermaciel): This would normally be a computed, but using a computed causes a bug where\n   * sometimes the items array is empty. The bug can be reproduced by switching this to use a\n   * computed and then quickly opening and closing menus in the dev app.\n   */\n  readonly items = () => this._items().map(i => i._pattern);\n\n  /** Whether the menu is visible. */\n  isVisible = computed(() => this._pattern.isVisible());\n\n  /** A callback function triggered when a menu item is selected. */\n  onSubmit = output<V>();\n\n  constructor() {\n    this._pattern = new MenuPattern({\n      ...this,\n      parent: computed(() => this.parent()?._pattern),\n      multi: () => false,\n      skipDisabled: () => false,\n      focusMode: () => 'roving',\n      orientation: () => 'vertical',\n      selectionMode: () => 'explicit',\n      activeItem: signal(undefined),\n      element: computed(() => this._elementRef.nativeElement),\n      onSubmit: (value: V) => this.onSubmit.emit(value),\n    });\n\n    // TODO(wagnermaciel): This is a redundancy needed for if the user uses display: none to hide\n    // submenus. In those cases, the ui pattern is calling focus() before the ui has a chance to\n    // update the display property. The result is focus() being called on an element that is not\n    // focusable. This simply retries focusing the element after render.\n    afterRenderEffect(() => {\n      if (this._pattern.isVisible()) {\n        const activeItem = untracked(() => this._pattern.inputs.activeItem());\n        this._pattern.listBehavior.goto(activeItem!);\n      }\n    });\n\n    afterRenderEffect(() => {\n      if (!this._pattern.hasBeenFocused()) {\n        this._pattern.setDefaultState();\n      }\n    });\n  }\n\n  // TODO(wagnermaciel): Author close, closeAll, and open methods for each directive.\n\n  /** Closes the menu. */\n  close(opts?: {refocus?: boolean}) {\n    this._pattern.inputs.parent()?.close(opts);\n  }\n\n  /** Closes all parent menus. */\n  closeAll(opts?: {refocus?: boolean}) {\n    const root = this._pattern.root();\n\n    if (root instanceof MenuTriggerPattern) {\n      root.close(opts);\n    }\n\n    if (root instanceof MenuPattern || root instanceof MenuBarPattern) {\n      root.inputs.activeItem()?.close(opts);\n    }\n  }\n}\n\n/**\n * A menu bar of menu items.\n *\n * Like the menu, a menubar is used to offer a list of menu item choices to users. However, a\n * menubar is used to display a persistent, top-level,\n * always-visible set of menu item choices.\n */\n@Directive({\n  selector: '[ngMenuBar]',\n  exportAs: 'ngMenuBar',\n  host: {\n    'role': 'menubar',\n    'class': 'ng-menu-bar',\n    '(keydown)': '_pattern.onKeydown($event)',\n    '(mouseover)': '_pattern.onMouseOver($event)',\n    '(click)': '_pattern.onClick($event)',\n    '(focusin)': '_pattern.onFocusIn()',\n    '(focusout)': '_pattern.onFocusOut($event)',\n  },\n})\nexport class MenuBar<V> {\n  /** The menu items contained in the menubar. */\n  readonly _allItems = contentChildren<MenuItem<V>>(MenuItem, {descendants: true});\n\n  readonly _items: SignalLike<MenuItem<V>[]> = () =>\n    this._allItems().filter(i => i.parent === this);\n\n  /** A reference to the menu element. */\n  private readonly _elementRef = inject(ElementRef);\n\n  /** A reference to the menubar element. */\n  readonly element: HTMLElement = this._elementRef.nativeElement;\n\n  /** The directionality (LTR / RTL) context for the application (or a subtree of it). */\n  private readonly _directionality = inject(Directionality);\n\n  /** A signal wrapper for directionality. */\n  readonly textDirection = toSignal(this._directionality.change, {\n    initialValue: this._directionality.value,\n  });\n\n  /** The value of the menu. */\n  readonly value = model<V[]>([]);\n\n  /** Whether the menu should wrap its items. */\n  readonly wrap = input<boolean>(true);\n\n  /** The delay in seconds before the typeahead buffer is cleared. */\n  readonly typeaheadDelay = input<number>(0.5);\n\n  /** The menu ui pattern instance. */\n  readonly _pattern: MenuBarPattern<V>;\n\n  /** The menu items as a writable signal. */\n  readonly items = signal<MenuItemPattern<V>[]>([]);\n\n  /** A callback function triggered when a menu item is selected. */\n  onSubmit = output<V>();\n\n  constructor() {\n    this._pattern = new MenuBarPattern({\n      ...this,\n      multi: () => false,\n      skipDisabled: () => false,\n      focusMode: () => 'roving',\n      orientation: () => 'horizontal',\n      selectionMode: () => 'explicit',\n      onSubmit: (value: V) => this.onSubmit.emit(value),\n      activeItem: signal(undefined),\n      element: computed(() => this._elementRef.nativeElement),\n    });\n\n    afterRenderEffect(() => {\n      this.items.set(this._items().map(i => i._pattern));\n    });\n\n    afterRenderEffect(() => {\n      if (!this._pattern.hasBeenFocused()) {\n        this._pattern.setDefaultState();\n      }\n    });\n  }\n}\n\n/**\n * An item in a Menu.\n *\n * Menu items can be used in menus and menubars to represent a choice or action a user can take.\n */\n@Directive({\n  selector: '[ngMenuItem]',\n  exportAs: 'ngMenuItem',\n  host: {\n    'role': 'menuitem',\n    'class': 'ng-menu-item',\n    '[attr.tabindex]': '_pattern.tabindex()',\n    '[attr.data-active]': '_pattern.isActive()',\n    '[attr.aria-haspopup]': '_pattern.hasPopup()',\n    '[attr.aria-expanded]': '_pattern.expanded()',\n    '[attr.aria-disabled]': '_pattern.disabled()',\n    '[attr.aria-controls]': '_pattern.submenu()?.id()',\n  },\n})\nexport class MenuItem<V> {\n  /** A reference to the menu item element. */\n  private readonly _elementRef = inject(ElementRef);\n\n  /** A reference to the menu element. */\n  readonly element: HTMLElement = this._elementRef.nativeElement;\n\n  /** The unique ID of the menu item. */\n  readonly id = input<string>(inject(_IdGenerator).getId('ng-menu-item-', true));\n\n  /** The value of the menu item. */\n  readonly value = input.required<V>();\n\n  /** Whether the menu item is disabled. */\n  readonly disabled = input<boolean>(false);\n\n  // TODO(wagnermaciel): Discuss whether all inputs should be models.\n\n  /** The search term associated with the menu item. */\n  readonly searchTerm = model<string>('');\n\n  /** A reference to the parent menu. */\n  private readonly _menu = inject<Menu<V>>(Menu, {optional: true});\n\n  /** A reference to the parent menu bar. */\n  private readonly _menuBar = inject<MenuBar<V>>(MenuBar, {optional: true});\n\n  /** A reference to the parent menu or menubar. */\n  readonly parent = this._menu ?? this._menuBar;\n\n  /** The submenu associated with the menu item. */\n  readonly submenu = input<Menu<V> | undefined>(undefined);\n\n  /** The menu item ui pattern instance. */\n  readonly _pattern: MenuItemPattern<V> = new MenuItemPattern<V>({\n    id: this.id,\n    value: this.value,\n    element: computed(() => this._elementRef.nativeElement),\n    disabled: this.disabled,\n    searchTerm: this.searchTerm,\n    parent: computed(() => this.parent?._pattern),\n    submenu: computed(() => this.submenu()?._pattern),\n  });\n}\n"],"names":[],"mappings":"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"}